{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/monz/Code/queue/frontend/src/app/barcode/page.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { Html5Qrcode } from \"html5-qrcode\";\n\nconst socket = io('http://192.168.1.207:5000');\n\nfunction Barcode() {\n  const [barcode, setBarcode] = useState(\"\"); // State to store the scanned barcode\n  const [isScanning, setIsScanning] = useState(false); // State to toggle scanning\n\n  const startScanning = () => {\n    const scannerElement = document.querySelector(\"#barcode-scanner\");\n    if (!scannerElement) {\n      console.error(\"Scanner element not found.\");\n      return;\n    }\n\n    setIsScanning(true);\n\n    const html5QrCode = new Html5Qrcode(\"barcode-scanner\");\n    html5QrCode\n      .start(\n        { facingMode: \"environment\" }, // Use the rear camera\n        {\n          fps: 10, // Frames per second\n          qrbox: { width: 250, height: 250 }, // Scanning box size\n        },\n        (decodedText) => {\n          setBarcode(decodedText); // Set the scanned barcode\n          html5QrCode.stop(); // Stop scanning after detecting a barcode\n          setIsScanning(false);\n        },\n        (errorMessage) => {\n          console.warn(\"Scanning error:\", errorMessage);\n        }\n      )\n      .catch((err) => {\n        console.error(\"Error initializing html5-qrcode:\", err);\n        setIsScanning(false);\n      });\n  };\n\n  const sendBarcodeToBackend = async () => {\n    if (!barcode) {\n      alert(\"No barcode scanned.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://192.168.1.207:5000/upload\", { barcode });\n      alert(`Price for barcode ${barcode}: ${response.data.price}`);\n    } catch (error) {\n      console.error(\"Error sending barcode to backend:\", error);\n      alert(\"Failed to process the barcode.\");\n    }\n  };\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <h2 className=\"text-4xl font-bold mb-6 text-center text-red-600\">Queue System</h2>\n\n       {/* âœ… Barcode Scanner */}\n       <div className=\"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-md mb-8\">\n        <h3 className=\"text-2xl font-semibold mb-4 text-gray-700\">ðŸ“· Barcode Scanner</h3>\n        <div id=\"barcode-scanner\" className=\"w-full h-64 bg-gray-200 rounded-lg mb-4\"></div>\n        {isScanning ? (\n          <button\n            onClick={() => setIsScanning(false)}\n            className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition\"\n          >\n            Stop Scanning\n          </button>\n        ) : (\n          <button\n            onClick={startScanning}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition\"\n          >\n            Start Scanning\n          </button>\n        )}\n        {barcode && (\n          <div className=\"mt-4\">\n            <p className=\"text-lg text-gray-700\">\n              <strong>Scanned Barcode:</strong> {barcode}\n            </p>\n            <button\n              onClick={sendBarcodeToBackend}\n              className=\"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition mt-2\"\n            >\n              Send to Backend\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Barcode;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;;;;;;AAEA,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE;AAElB,SAAS;IACP,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,qCAAqC;IACjF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,2BAA2B;IAEhF,MAAM,gBAAgB;QACpB,MAAM,iBAAiB,SAAS,aAAa,CAAC;QAC9C,IAAI,CAAC,gBAAgB;YACnB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,cAAc;QAEd,MAAM,cAAc,IAAI,yJAAA,CAAA,cAAW,CAAC;QACpC,YACG,KAAK,CACJ;YAAE,YAAY;QAAc,GAC5B;YACE,KAAK;YACL,OAAO;gBAAE,OAAO;gBAAK,QAAQ;YAAI;QACnC,GACA,CAAC;YACC,WAAW,cAAc,0BAA0B;YACnD,YAAY,IAAI,IAAI,0CAA0C;YAC9D,cAAc;QAChB,GACA,CAAC;YACC,QAAQ,IAAI,CAAC,mBAAmB;QAClC,GAED,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC,oCAAoC;YAClD,cAAc;QAChB;IACJ;IAEA,MAAM,uBAAuB;QAC3B,IAAI,CAAC,SAAS;YACZ,MAAM;YACN;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,oCAAoC;gBAAE;YAAQ;YAChF,MAAM,CAAC,kBAAkB,EAAE,QAAQ,EAAE,EAAE,SAAS,IAAI,CAAC,KAAK,EAAE;QAC9D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,MAAM;QACR;IACF;IACA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAmD;;;;;;0BAGhE,8OAAC;gBAAI,WAAU;;kCACd,8OAAC;wBAAG,WAAU;kCAA4C;;;;;;kCAC1D,8OAAC;wBAAI,IAAG;wBAAkB,WAAU;;;;;;oBACnC,2BACC,8OAAC;wBACC,SAAS,IAAM,cAAc;wBAC7B,WAAU;kCACX;;;;;6CAID,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;oBAIF,yBACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;kDAAO;;;;;;oCAAyB;oCAAE;;;;;;;0CAErC,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}